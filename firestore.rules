rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // App Settings: Allow read if authenticated (includes anonymous)
    match /app_settings/{settingId} {
      allow read: if request.auth != null;
      allow write: if false; // Admin only
    }

    // Users:
    // Allow authenticated users (including anonymous trying to log in via code)
    // to query/read user documents.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update, delete: if false; // Admin only
    }

    // Questions: Authenticated users can read.
    match /questions/{questionId} {
      allow read: if request.auth != null;
      allow write: if false; // Admin only
    }

    // Evaluations:
    // Allow create if authenticated. Client sends evaluatorId (custom user ID).
    // Allow read if authenticated (user will filter client-side for their own).
    // This is less secure but helps identify if rules are the sole blocker.
    match /evaluations/{evaluationId} {
      allow create: if request.auth != null; // User provides their own custom evaluatorId
      allow read: if request.auth != null;   // Allows fetching submissions to check status
      allow update, delete: if false;
    }
    
    // Summarized Evaluations:
    // Allow create/read/update if authenticated. Client responsible for correct IDs.
    match /summarized_evaluations/{summaryId} { // Changed {evaluationId} to {summaryId} for clarity
      allow read: if request.auth != null;
      allow create: if request.auth != null; 
      allow update: if request.auth != null; // Client needs to send correct evaluatorId
                                            // To secure: check resource.data.evaluatorId against a known value for the user
      allow delete: if false;
    }
  }
}